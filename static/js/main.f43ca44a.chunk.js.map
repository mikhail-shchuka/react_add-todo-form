{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","map","prepareTodos","todosFromServer","author","usersFromServer","find","maxTodoID","sort","elem1","elem2","App","useState","setTitle","setUser","errorUser","setErrorUser","errorTitle","setErrorTitle","handler","event","target","value","onSubmit","preventDefault","trim","userName","newTodo","push","addTodo","type","placeholder","onChange","chooseUser","ReactDOM","render","document","getElementById"],"mappings":"6MAAe,G,MAAA,CACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,4BC3DI,GACb,CACEH,GAAI,EACJI,MAAO,qBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,GACJI,MAAO,qBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,EACJI,MAAO,qCACPC,WAAW,EACXC,OAAQ,I,uBCXCC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKL,OAA7C,SACGK,EAAKP,QCDCU,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,OACE,0BACE,UAASA,EAAKZ,GACdS,UAAWI,IACT,WACA,CAAE,sBAAuBD,EAAKP,YAJlC,UAOE,oBAAII,UAAU,kBAAd,SACGG,EAAKR,QAGPQ,EAAKJ,MACJ,cAAC,EAAD,CAAUA,KAAMI,EAAKJ,WCfhBM,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,yBAASN,UAAU,WAAnB,SACGM,EAAMC,KAAI,SAAAJ,GAAI,OACb,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKZ,UCFtBiB,EAA8BC,EAAgBF,KAAI,SAAAJ,GACtD,IAAMO,EAASC,EAAgBC,MAAK,SAAAb,GAAI,OAAIA,EAAKR,KAAOY,EAAKN,UAE7D,OAAO,2BACFM,GADL,IAEEJ,KAAMW,OAING,EAAY,YAAIJ,GAAiBK,MAAK,SAACC,EAAOC,GAAR,OACxCA,EAAMzB,GAAKwB,EAAMxB,MAAK,GAAGA,GAiBd0B,EAAM,WACjB,MAA0BC,mBAAS,IAAnC,mBAAOvB,EAAP,KAAcwB,EAAd,KACA,EAAwBD,mBAAS,IAAjC,mBAAOnB,EAAP,KAAaqB,EAAb,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAIMC,EAAU,SAACC,GACW,UAAtBA,EAAMC,OAAOnC,MACX+B,GACFC,GAAc,GAGhBL,EAASO,EAAMC,OAAOC,SAElBP,GACFC,GAAa,GAGfF,EAAQM,EAAMC,OAAOC,SAIzB,OACE,sBAAK5B,UAAU,MAAf,UACE,+CACA,uBAAM6B,SAAU,SAACH,GAGf,GAFAA,EAAMI,kBAEDnC,EAAMoC,SAAWhC,EASpB,OARKJ,EAAMoC,QACTP,GAAc,QAGXzB,GACHuB,GAAa,KAnDT,SAAC3B,EAAeqC,GAC9BnB,GAAa,EAEb,IAAMH,EAASC,EAAgBC,MAAK,SAAAb,GAAI,OAAIA,EAAKP,OAASwC,KACpDC,EAAU,CACd1C,GAAIsB,EACJlB,QACAC,WAAW,EACXC,OAAQ,EACRE,KAAMW,GAGRF,EAAa0B,KAAKD,GA6CZE,CAAQxC,EAAOI,GACfoB,EAAS,IACTC,EAAQ,KAjBV,UAoBE,sBAAKpB,UAAU,QAAf,UACE,kCACG,UACD,uBACEoC,KAAK,OACL5C,KAAK,QACL6C,YAAY,gBACZ,UAAQ,aACRT,MAAOjC,EACP2C,SAAUb,OAGbF,GAAc,sBAAMvB,UAAU,QAAhB,qCAGjB,sBAAKA,UAAU,QAAf,UACE,kCACG,SACD,yBACE,UAAQ,aACRR,KAAK,OACLoC,MAAO7B,EACPuC,SAAUb,EAJZ,UAME,wBAAQG,MAAM,GAAd,2BACCjB,EAAgBJ,KAAI,SAAAgC,GAAU,OAC7B,wBAEEX,MAAOW,EAAW/C,KAFpB,SAIG+C,EAAW/C,MAHP+C,EAAWhD,aAQvB8B,GAAa,sBAAMrB,UAAU,QAAhB,qCAGhB,wBAAQoC,KAAK,SAAS,UAAQ,eAA9B,oBAKF,cAAC,EAAD,CAAU9B,MAAOE,QC3HvBgC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f43ca44a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { PrepareTodo } from '../../types/PrepareTodo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: PrepareTodo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': todo.completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && (\n        <UserInfo user={todo.user} />\n      )}\n    </article>\n  );\n};\n","import { PrepareTodo } from '../../types/PrepareTodo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: PrepareTodo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { PrepareTodo } from './types/PrepareTodo';\nimport { TodoList } from './components/TodoList/TodoList';\n\nconst prepareTodos: PrepareTodo[] = todosFromServer.map(todo => {\n  const author = usersFromServer.find(user => user.id === todo.userId);\n\n  return {\n    ...todo,\n    user: author,\n  };\n});\n\nlet maxTodoID = [...todosFromServer].sort((elem1, elem2) => (\n  elem2.id - elem1.id))[0].id;\n\nconst addTodo = (title: string, userName: string) => {\n  maxTodoID += 1;\n\n  const author = usersFromServer.find(user => user.name === userName);\n  const newTodo = {\n    id: maxTodoID,\n    title,\n    completed: false,\n    userId: 1,\n    user: author,\n  };\n\n  prepareTodos.push(newTodo);\n};\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState('');\n  const [errorUser, setErrorUser] = useState(false);\n  const [errorTitle, setErrorTitle] = useState(false);\n\n  type HandlingElement = HTMLInputElement | HTMLSelectElement;\n\n  const handler = (event: React.ChangeEvent<HandlingElement>) => {\n    if (event.target.name === 'title') {\n      if (errorTitle) {\n        setErrorTitle(false);\n      }\n\n      setTitle(event.target.value);\n    } else {\n      if (errorUser) {\n        setErrorUser(false);\n      }\n\n      setUser(event.target.value);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <form onSubmit={(event): void => {\n        event.preventDefault();\n\n        if (!title.trim() || !user) {\n          if (!title.trim()) {\n            setErrorTitle(true);\n          }\n\n          if (!user) {\n            setErrorUser(true);\n          }\n\n          return;\n        }\n\n        addTodo(title, user);\n        setTitle('');\n        setUser('');\n      }}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Enter a title\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={handler}\n            />\n          </label>\n          {errorTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              name=\"user\"\n              value={user}\n              onChange={handler}\n            >\n              <option value=\"\">Choose a user</option>\n              {usersFromServer.map(chooseUser => (\n                <option\n                  key={chooseUser.id}\n                  value={chooseUser.name}\n                >\n                  {chooseUser.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          {errorUser && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={prepareTodos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}